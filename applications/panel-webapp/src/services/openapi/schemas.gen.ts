// This file is auto-generated by @hey-api/openapi-ts

export const Body_upload_product_vectors_deep_postSchema = {
    properties: {
        file: {
            type: 'string',
            format: 'binary',
            title: 'File'
        }
    },
    type: 'object',
    required: ['file'],
    title: 'Body_upload_product_vectors_deep_post'
} as const;

export const Body_upload_product_vectors_products_vectors_postSchema = {
    properties: {
        product_code: {
            type: 'string',
            title: 'Product Code'
        },
        files: {
            items: {
                type: 'string',
                format: 'binary'
            },
            type: 'array',
            title: 'Files'
        }
    },
    type: 'object',
    required: ['product_code', 'files'],
    title: 'Body_upload_product_vectors_products_vectors_post'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const LowStockProductSchema = {
    properties: {
        product_code: {
            type: 'string',
            title: 'Product Code'
        },
        product_name: {
            type: 'string',
            title: 'Product Name'
        },
        quantity: {
            type: 'integer',
            title: 'Quantity'
        }
    },
    type: 'object',
    required: ['product_code', 'product_name', 'quantity'],
    title: 'LowStockProduct'
} as const;

export const ProductSchemaSchema = {
    properties: {
        product_code: {
            type: 'string',
            title: 'Product Code'
        },
        product_name: {
            type: 'string',
            title: 'Product Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        price: {
            type: 'number',
            title: 'Price'
        },
        quantity: {
            type: 'integer',
            title: 'Quantity'
        },
        category: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Category'
        },
        unit: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Unit'
        },
        shelf: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Shelf'
        },
        image_id: {
            items: {
                type: 'string',
                format: 'uuid'
            },
            type: 'array',
            title: 'Image Id'
        }
    },
    type: 'object',
    required: ['product_code', 'product_name', 'price', 'quantity'],
    title: 'ProductSchema'
} as const;

export const ProductStatisticsResponseSchema = {
    properties: {
        total_products: {
            type: 'integer',
            title: 'Total Products'
        },
        total_quantity: {
            type: 'integer',
            title: 'Total Quantity'
        },
        total_categories: {
            type: 'integer',
            title: 'Total Categories'
        },
        low_stock_products: {
            items: {
                '$ref': '#/components/schemas/LowStockProduct'
            },
            type: 'array',
            title: 'Low Stock Products'
        }
    },
    type: 'object',
    required: ['total_products', 'total_quantity', 'total_categories', 'low_stock_products'],
    title: 'ProductStatisticsResponse'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;
